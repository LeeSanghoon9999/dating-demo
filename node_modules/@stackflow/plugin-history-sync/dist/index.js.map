{
  "version": 3,
  "sources": ["../src/index.ts", "../src/historySyncPlugin.tsx", "../src/last.ts", "../src/makeTemplate.ts", "../src/normalizeRoute.ts", "../src/RoutesContext.tsx"],
  "sourcesContent": ["export * from \"./historySyncPlugin\";\nexport { makeTemplate } from \"./makeTemplate\";\nexport { normalizeRoute } from \"./normalizeRoute\";\nexport { useRoutes } from \"./RoutesContext\";\n", "import type { Activity } from \"@stackflow/core\";\nimport { id, makeEvent } from \"@stackflow/core\";\nimport type { ActivityStep } from \"@stackflow/core/dist/AggregateOutput\";\nimport type { StackflowReactPlugin } from \"@stackflow/react\";\nimport React from \"react\";\n\nimport { last } from \"./last\";\nimport { makeTemplate } from \"./makeTemplate\";\nimport { normalizeRoute } from \"./normalizeRoute\";\nimport { RoutesProvider } from \"./RoutesContext\";\n\nconst STATE_TAG = `${process.env.PACKAGE_NAME}@${process.env.PACKAGE_VERSION}`;\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\n\nconst isServer = typeof window === \"undefined\";\n\nfunction getCurrentState() {\n  if (isServer) {\n    return null;\n  }\n\n  return window.history.state;\n}\n\ninterface State {\n  _TAG: string;\n  activity: Activity;\n  step?: ActivityStep;\n}\nfunction parseState(state: unknown): State | null {\n  const _state: any = state;\n\n  if (\n    typeof _state === \"object\" &&\n    _state !== null &&\n    \"_TAG\" in _state &&\n    typeof _state._TAG === \"string\" &&\n    _state._TAG === STATE_TAG\n  ) {\n    return state as State;\n  }\n\n  return null;\n}\n\nfunction pushState({\n  state,\n  url,\n  useHash,\n}: {\n  state: State;\n  url: string;\n  useHash?: boolean;\n}) {\n  if (isServer) {\n    return;\n  }\n  const nextUrl = useHash ? `${window.location.pathname}#${url}` : url;\n  window.history.pushState(state, \"\", nextUrl);\n}\n\nfunction replaceState({\n  url,\n  state,\n  useHash,\n}: {\n  url: string;\n  state: State;\n  useHash?: boolean;\n}) {\n  if (isServer) {\n    return;\n  }\n  const nextUrl = useHash ? `${window.location.pathname}#${url}` : url;\n  window.history.replaceState(state, \"\", nextUrl);\n}\n\n/**\n * Removes activity context before serialization\n */\nfunction removeActivityContext(activity: Activity): Activity {\n  return {\n    ...activity,\n    context: undefined,\n    pushedBy: {\n      ...activity.pushedBy,\n      activityContext: undefined,\n    },\n  };\n}\n\nconst startTransition: React.TransitionStartFunction =\n  React.startTransition ?? ((cb: () => void) => cb());\n\ntype HistorySyncPluginOptions<K extends string> = {\n  routes: {\n    [key in K]: string | string[];\n  };\n  fallbackActivity: (args: { initialContext: any }) => K;\n  useHash?: boolean;\n};\nexport function historySyncPlugin<\n  T extends { [activityName: string]: unknown },\n>(\n  options: HistorySyncPluginOptions<Extract<keyof T, string>>,\n): StackflowReactPlugin<T> {\n  type K = Extract<keyof T, string>;\n\n  return () => {\n    let pushFlag = 0;\n    let popFlag = 0;\n\n    return {\n      key: \"plugin-history-sync\",\n      wrapStack({ stack }) {\n        return (\n          <RoutesProvider routes={options.routes}>\n            {stack.render()}\n          </RoutesProvider>\n        );\n      },\n      overrideInitialEvents({ initialContext }) {\n        const initialHistoryState = parseState(getCurrentState());\n\n        if (initialHistoryState) {\n          return [\n            {\n              ...initialHistoryState.activity.pushedBy,\n              name: \"Pushed\",\n            },\n            ...(initialHistoryState.step?.pushedBy.name === \"StepPushed\" ||\n            initialHistoryState.step?.pushedBy.name === \"StepReplaced\"\n              ? [\n                  {\n                    ...initialHistoryState.step.pushedBy,\n                    name: \"StepPushed\" as const,\n                  },\n                ]\n              : []),\n          ];\n        }\n\n        function resolvePath() {\n          if (\n            initialContext?.req?.path &&\n            typeof initialContext.req.path === \"string\"\n          ) {\n            return initialContext.req.path as string;\n          }\n\n          if (isServer) {\n            return null;\n          }\n\n          if (options.useHash) {\n            return window.location.hash.split(\"#\")[1] ?? \"/\";\n          }\n\n          return window.location.pathname + window.location.search;\n        }\n\n        const path = resolvePath();\n        const activityNames = Object.keys(options.routes);\n\n        if (path) {\n          for (let i = 0; i < activityNames.length; i += 1) {\n            const activityName = activityNames[i] as K;\n            const routes = normalizeRoute(options.routes[activityName]);\n\n            for (let j = 0; j < routes.length; j += 1) {\n              const route = routes[j];\n\n              const template = makeTemplate(route);\n              const activityParams = template.parse(path);\n              const matched = !!activityParams;\n\n              if (matched) {\n                const activityId = id();\n\n                return [\n                  makeEvent(\"Pushed\", {\n                    activityId,\n                    activityName,\n                    activityParams: {\n                      ...activityParams,\n                    },\n                    eventDate: new Date().getTime() - MINUTE,\n                    activityContext: {\n                      path,\n                    },\n                  }),\n                ];\n              }\n            }\n          }\n        }\n\n        const fallbackActivityId = id();\n        const fallbackActivityName = options.fallbackActivity({\n          initialContext,\n        });\n        const fallbackActivityRoutes = normalizeRoute(\n          options.routes[fallbackActivityName],\n        );\n        const fallbackActivityPath = fallbackActivityRoutes[0];\n\n        return [\n          makeEvent(\"Pushed\", {\n            activityId: fallbackActivityId,\n            activityName: fallbackActivityName,\n            activityParams: {},\n            eventDate: new Date().getTime() - MINUTE,\n            activityContext: {\n              path: fallbackActivityPath,\n            },\n          }),\n        ];\n      },\n      onInit({ actions: { getStack, dispatchEvent, push, stepPush } }) {\n        const rootActivity = getStack().activities[0];\n        const template = makeTemplate(\n          normalizeRoute(options.routes[rootActivity.name])[0],\n        );\n\n        (window as any).getStack = getStack;\n\n        replaceState({\n          url: template.fill(rootActivity.params),\n          state: {\n            _TAG: STATE_TAG,\n            activity: removeActivityContext(rootActivity),\n            step: last(rootActivity.steps),\n          },\n          useHash: options.useHash,\n        });\n\n        const onPopState = (e: PopStateEvent) => {\n          if (popFlag) {\n            popFlag -= 1;\n            return;\n          }\n\n          const historyState = parseState(e.state);\n\n          if (!historyState) {\n            return;\n          }\n\n          const targetActivity = historyState.activity;\n          const targetActivityId = historyState.activity.id;\n          const targetStep = historyState.step;\n\n          const { activities } = getStack();\n          const currentActivity = activities.find(\n            (activity) => activity.isActive,\n          );\n\n          if (!currentActivity) {\n            return;\n          }\n\n          const currentStep = last(currentActivity.steps);\n\n          const nextActivity = activities.find(\n            (activity) => activity.id === targetActivityId,\n          );\n          const nextStep = currentActivity.steps.find(\n            (step) => step.id === targetStep?.id,\n          );\n\n          const isBackward = () => currentActivity.id > targetActivityId;\n          const isForward = () => currentActivity.id < targetActivityId;\n          const isStep = () => currentActivity.id === targetActivityId;\n\n          const isStepBackward = () => {\n            if (!isStep()) {\n              return false;\n            }\n\n            if (!targetStep) {\n              return true;\n            }\n            if (currentStep && currentStep.id > targetStep.id) {\n              return true;\n            }\n\n            return false;\n          };\n          const isStepForward = () => {\n            if (!isStep()) {\n              return false;\n            }\n\n            if (!currentStep) {\n              return true;\n            }\n            if (targetStep && currentStep.id < targetStep.id) {\n              return true;\n            }\n\n            return false;\n          };\n\n          if (isBackward()) {\n            dispatchEvent(\"Popped\", {});\n\n            if (!nextActivity) {\n              pushFlag += 1;\n              push({\n                ...targetActivity.pushedBy,\n              });\n\n              if (\n                targetStep?.pushedBy.name === \"StepPushed\" ||\n                targetStep?.pushedBy.name === \"StepReplaced\"\n              ) {\n                pushFlag += 1;\n                stepPush({\n                  ...targetStep.pushedBy,\n                });\n              }\n            }\n          }\n          if (isStepBackward()) {\n            if (\n              !nextStep &&\n              targetStep &&\n              (targetStep?.pushedBy.name === \"StepPushed\" ||\n                targetStep?.pushedBy.name === \"StepReplaced\")\n            ) {\n              pushFlag += 1;\n              stepPush({\n                ...targetStep.pushedBy,\n              });\n            }\n\n            dispatchEvent(\"StepPopped\", {});\n          }\n\n          if (isForward()) {\n            pushFlag += 1;\n            push({\n              activityId: targetActivity.id,\n              activityName: targetActivity.name,\n              activityParams: targetActivity.params,\n            });\n          }\n          if (isStepForward()) {\n            if (!targetStep) {\n              return;\n            }\n\n            pushFlag += 1;\n            stepPush({\n              stepId: targetStep.id,\n              stepParams: targetStep.params,\n            });\n          }\n        };\n\n        if (!isServer) {\n          window.addEventListener(\"popstate\", onPopState);\n        }\n      },\n      onPushed({ effect: { activity } }) {\n        if (pushFlag) {\n          pushFlag -= 1;\n          return;\n        }\n\n        const template = makeTemplate(\n          normalizeRoute(options.routes[activity.name])[0],\n        );\n\n        pushState({\n          url: template.fill(activity.params),\n          state: {\n            _TAG: STATE_TAG,\n            activity: removeActivityContext(activity),\n          },\n          useHash: options.useHash,\n        });\n      },\n      onStepPushed({ effect: { activity, step } }) {\n        if (pushFlag) {\n          pushFlag -= 1;\n          return;\n        }\n\n        const template = makeTemplate(\n          normalizeRoute(options.routes[activity.name])[0],\n        );\n\n        pushState({\n          url: template.fill(activity.params),\n          state: {\n            _TAG: STATE_TAG,\n            activity: removeActivityContext(activity),\n            step,\n          },\n          useHash: options.useHash,\n        });\n      },\n      onReplaced({ effect: { activity } }) {\n        if (!activity.isActive) {\n          return;\n        }\n\n        const template = makeTemplate(\n          normalizeRoute(options.routes[activity.name])[0],\n        );\n\n        replaceState({\n          url: template.fill(activity.params),\n          state: {\n            _TAG: STATE_TAG,\n            activity: removeActivityContext(activity),\n          },\n          useHash: options.useHash,\n        });\n      },\n      onStepReplaced({ effect: { activity, step } }) {\n        if (!activity.isActive) {\n          return;\n        }\n\n        const template = makeTemplate(\n          normalizeRoute(options.routes[activity.name])[0],\n        );\n\n        replaceState({\n          url: template.fill(activity.params),\n          state: {\n            _TAG: STATE_TAG,\n            activity: removeActivityContext(activity),\n            step,\n          },\n          useHash: options.useHash,\n        });\n      },\n      onBeforePush({ actionParams, actions: { overrideActionParams } }) {\n        const template = makeTemplate(\n          normalizeRoute(options.routes[actionParams.activityName])[0],\n        );\n        const path = template.fill(actionParams.activityParams);\n\n        overrideActionParams({\n          ...actionParams,\n          activityContext: {\n            ...actionParams.activityContext,\n            path,\n          },\n        });\n      },\n      onBeforeReplace({ actionParams, actions: { overrideActionParams } }) {\n        const template = makeTemplate(\n          normalizeRoute(options.routes[actionParams.activityName])[0],\n        );\n        const path = template.fill(actionParams.activityParams);\n\n        overrideActionParams({\n          ...actionParams,\n          activityContext: {\n            ...actionParams.activityContext,\n            path,\n          },\n        });\n      },\n      onBeforePop({ actions: { getStack } }) {\n        if (typeof window === \"undefined\") {\n          return;\n        }\n\n        const { activities } = getStack();\n        const currentActivity = activities.find(\n          (activity) => activity.isActive,\n        );\n        const popCount = currentActivity?.steps.length ?? 0;\n\n        popFlag += popCount;\n\n        do {\n          for (let i = 0; i < popCount; i += 1) {\n            window.history.back();\n          }\n        } while (!parseState(getCurrentState()));\n      },\n    };\n  };\n}\n", "export function last<T>(arr: T[]) {\n  return arr.length === 0 ? undefined : arr[arr.length - 1];\n}\n", "import UrlPattern from \"url-pattern\";\n\nfunction pathToUrl(path: string) {\n  return new URL(path, \"file://\");\n}\n\nfunction urlSearchParamsToMap(urlSearchParams: URLSearchParams) {\n  const map: { [key: string]: any } = {};\n\n  urlSearchParams.forEach((value, key) => {\n    map[key] = value;\n  });\n\n  return map;\n}\n\nfunction appendTrailingSlashInPathname(pathname: string) {\n  if (pathname.endsWith(\"/\")) {\n    return pathname;\n  }\n  return `${pathname}/`;\n}\n\nfunction prependQuestionMarkInSearchParams(searchParams: URLSearchParams) {\n  const searchParamsStr = searchParams.toString();\n\n  if (searchParamsStr.length > 0) {\n    return `?${searchParams}`;\n  }\n  return searchParams;\n}\n\nexport function makeTemplate(templateStr: string) {\n  const pattern = new UrlPattern(`${templateStr}(/)`);\n\n  return {\n    fill(params: { [key: string]: string | undefined }) {\n      const pathname = pattern.stringify(params);\n      const pathParams = pattern.match(pathname) ?? {};\n\n      const searchParamsMap = { ...params };\n\n      Object.keys(pathParams).forEach((key) => {\n        delete searchParamsMap[key];\n      });\n\n      const searchParams = new URLSearchParams(searchParamsMap as any);\n\n      return (\n        appendTrailingSlashInPathname(pathname) +\n        prependQuestionMarkInSearchParams(searchParams)\n      );\n    },\n    parse<T extends { [key: string]: string | undefined }>(\n      path: string,\n    ): T | null {\n      const url = pathToUrl(path);\n      const pathParams = pattern.match(url.pathname);\n      const searchParams = urlSearchParamsToMap(url.searchParams);\n\n      if (!pathParams) {\n        return null;\n      }\n\n      return {\n        ...searchParams,\n        ...pathParams,\n      };\n    },\n  };\n}\n", "export function normalizeRoute(route: string | string[]) {\n  return typeof route === \"string\" ? [route] : route;\n}\n", "import React, { createContext, useContext } from \"react\";\n\nexport type RoutesMap = {\n  [activityName in string]?: string | string[];\n};\n\nexport const RoutesContext = createContext<RoutesMap>({});\n\ninterface RoutesProviderProps {\n  routes: RoutesMap;\n  children: React.ReactNode;\n}\nexport const RoutesProvider: React.FC<RoutesProviderProps> = (props) => (\n  <RoutesContext.Provider value={props.routes}>\n    {props.children}\n  </RoutesContext.Provider>\n);\n\nexport function useRoutes() {\n  return useContext(RoutesContext);\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "historySyncPlugin", "makeTemplate", "normalizeRoute", "useRoutes", "__toCommonJS", "import_core", "import_react", "last", "arr", "import_url_pattern", "pathToUrl", "path", "urlSearchParamsToMap", "urlSearchParams", "map", "value", "key", "appendTrailingSlashInPathname", "pathname", "prependQuestionMarkInSearchParams", "searchParams", "makeTemplate", "templateStr", "pattern", "UrlPattern", "params", "_a", "pathParams", "searchParamsMap", "__spreadValues", "url", "normalizeRoute", "route", "import_react", "RoutesContext", "RoutesProvider", "props", "React", "useRoutes", "STATE_TAG", "SECOND", "MINUTE", "isServer", "getCurrentState", "parseState", "state", "_state", "pushState", "url", "useHash", "nextUrl", "replaceState", "removeActivityContext", "activity", "__spreadProps", "__spreadValues", "_a", "startTransition", "React", "cb", "historySyncPlugin", "options", "pushFlag", "popFlag", "stack", "RoutesProvider", "initialContext", "_b", "initialHistoryState", "resolvePath", "path", "activityNames", "activityName", "routes", "normalizeRoute", "j", "route", "activityParams", "makeTemplate", "activityId", "fallbackActivityId", "fallbackActivityName", "fallbackActivityPath", "getStack", "dispatchEvent", "push", "stepPush", "rootActivity", "template", "last", "onPopState", "e", "historyState", "targetActivity", "targetActivityId", "targetStep", "activities", "currentActivity", "currentStep", "nextActivity", "nextStep", "step", "isBackward", "isForward", "isStep", "isStepBackward", "isStepForward", "actionParams", "overrideActionParams", "popCount", "i"]
}
