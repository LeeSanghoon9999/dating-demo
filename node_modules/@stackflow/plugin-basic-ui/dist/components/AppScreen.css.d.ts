export declare const vars: {
    transitionDuration: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
    zIndexes: {
        dim: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        paper: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        edge: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        appBar: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
    };
    appBar: {
        topMargin: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        center: {
            mainWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
    };
};
export declare const background: string;
export declare const allTransitions: string;
export declare const enterActive: string;
export declare const enterDone: string;
export declare const exitActive: string;
export declare const exitDone: string;
export declare const appScreen: import("@vanilla-extract/recipes").RuntimeFn<{
    transitionState: {
        "enter-active": string;
        "enter-done": string;
        "exit-active": string;
        "exit-done": string;
    };
}>;
export declare const dim: string;
export declare const paper: import("@vanilla-extract/recipes").RuntimeFn<{
    hasAppBar: {
        true: (string | {
            transition: `transform var(--${string}), opacity var(--${string}), margin-top var(--${string})` | `transform var(--${string}), opacity var(--${string}), margin-top var(--${string}, ${string})` | `transform var(--${string}), opacity var(--${string}), margin-top var(--${string}, ${number})` | `transform var(--${string}), opacity var(--${string}, ${string}), margin-top var(--${string})` | `transform var(--${string}), opacity var(--${string}, ${string}), margin-top var(--${string}, ${string})` | `transform var(--${string}), opacity var(--${string}, ${string}), margin-top var(--${string}, ${number})` | `transform var(--${string}), opacity var(--${string}, ${number}), margin-top var(--${string})` | `transform var(--${string}), opacity var(--${string}, ${number}), margin-top var(--${string}, ${string})` | `transform var(--${string}), opacity var(--${string}, ${number}), margin-top var(--${string}, ${number})` | `transform var(--${string}, ${string}), opacity var(--${string}), margin-top var(--${string})` | `transform var(--${string}, ${string}), opacity var(--${string}), margin-top var(--${string}, ${string})` | `transform var(--${string}, ${string}), opacity var(--${string}), margin-top var(--${string}, ${number})` | `transform var(--${string}, ${string}), opacity var(--${string}, ${string}), margin-top var(--${string})` | `transform var(--${string}, ${string}), opacity var(--${string}, ${string}), margin-top var(--${string}, ${string})` | `transform var(--${string}, ${string}), opacity var(--${string}, ${string}), margin-top var(--${string}, ${number})` | `transform var(--${string}, ${string}), opacity var(--${string}, ${number}), margin-top var(--${string})` | `transform var(--${string}, ${string}), opacity var(--${string}, ${number}), margin-top var(--${string}, ${string})` | `transform var(--${string}, ${string}), opacity var(--${string}, ${number}), margin-top var(--${string}, ${number})` | `transform var(--${string}, ${number}), opacity var(--${string}), margin-top var(--${string})` | `transform var(--${string}, ${number}), opacity var(--${string}), margin-top var(--${string}, ${string})` | `transform var(--${string}, ${number}), opacity var(--${string}), margin-top var(--${string}, ${number})` | `transform var(--${string}, ${number}), opacity var(--${string}, ${string}), margin-top var(--${string})` | `transform var(--${string}, ${number}), opacity var(--${string}, ${string}), margin-top var(--${string}, ${string})` | `transform var(--${string}, ${number}), opacity var(--${string}, ${string}), margin-top var(--${string}, ${number})` | `transform var(--${string}, ${number}), opacity var(--${string}, ${number}), margin-top var(--${string})` | `transform var(--${string}, ${number}), opacity var(--${string}, ${number}), margin-top var(--${string}, ${string})` | `transform var(--${string}, ${number}), opacity var(--${string}, ${number}), margin-top var(--${string}, ${number})`;
            marginTop: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            height: `calc(100% - var(--${string}))` | `calc(100% - var(--${string}, ${string}))` | `calc(100% - var(--${string}, ${number}))`;
            vars: {
                [x: string]: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            /**
             * When `max()` and `env()` (or `constant()`) supported
             *
             * - https://caniuse.com/css-env-function
             * - https://caniuse.com/css-math-functions
             */
            "@supports": {
                "(padding: max(0px)) and (padding: constant(safe-area-inset-top))": {
                    vars: {
                        [x: string]: string;
                    };
                };
                "(padding: max(0px)) and (padding: env(safe-area-inset-top))": {
                    vars: {
                        [x: string]: string;
                    };
                };
            };
        })[];
    };
    modalPresentationStyle: {
        fullScreen: {
            selectors: {
                [x: string]: {
                    transform: "translate3d(0, 100%, 0)";
                };
            };
        };
    };
    activityEnterStyle: {
        slideInLeft: {
            selectors: {
                [x: string]: {
                    transform: "translate3d(50%, 0, 0)";
                };
            };
        };
    };
}>;
export declare const edge: import("@vanilla-extract/recipes").RuntimeFn<{
    hasAppBar: {
        true: {
            top: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            height: `calc(100% - var(--${string}))` | `calc(100% - var(--${string}, ${string}))` | `calc(100% - var(--${string}, ${number}))`;
        };
    };
}>;
//# sourceMappingURL=AppScreen.css.d.ts.map