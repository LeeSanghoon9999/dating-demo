import type { DomainEvent, PushedEvent, StepPushedEvent } from "./event-types";
import type { StackflowActions, StackflowPlugin } from "./interfaces";
export type MakeCoreStoreOptions = {
    initialEvents: DomainEvent[];
    initialContext?: any;
    plugins: StackflowPlugin[];
    handlers?: {
        onInitialActivityIgnored?: (initialPushedEvents: (PushedEvent | StepPushedEvent)[]) => void;
        onInitialActivityNotFound?: () => void;
    };
};
export type CoreStore = {
    actions: StackflowActions;
    init: () => void;
    pullEvents: () => DomainEvent[];
    subscribe: (listener: () => void) => () => void;
    pluginInstances: ReturnType<StackflowPlugin>[];
};
export declare function makeCoreStore(options: MakeCoreStoreOptions): CoreStore;
//# sourceMappingURL=makeCoreStore.d.ts.map