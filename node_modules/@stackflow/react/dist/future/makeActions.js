"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var makeActions_exports = {};
__export(makeActions_exports, {
  makeActions: () => makeActions
});
module.exports = __toCommonJS(makeActions_exports);
var import_activity = require("../__internal__/activity");
function parseActionOptions(options) {
  if (!options) {
    return { skipActiveState: false };
  }
  const isNullableAnimateOption = options.animate == null;
  if (isNullableAnimateOption) {
    return { skipActiveState: false };
  }
  return { skipActiveState: !options.animate };
}
function makeActions(getCoreActions) {
  return {
    push(activityName, activityParams, options) {
      var _a;
      const activityId = (0, import_activity.makeActivityId)();
      (_a = getCoreActions()) == null ? void 0 : _a.push({
        activityId,
        activityName,
        activityParams,
        skipEnterActiveState: parseActionOptions(options).skipActiveState
      });
      return {
        activityId
      };
    },
    replace(activityName, activityParams, options) {
      var _a, _b;
      const activityId = (0, import_activity.makeActivityId)();
      (_b = getCoreActions()) == null ? void 0 : _b.replace({
        activityId: (_a = options == null ? void 0 : options.activityId) != null ? _a : (0, import_activity.makeActivityId)(),
        activityName,
        activityParams,
        skipEnterActiveState: parseActionOptions(options).skipActiveState
      });
      return {
        activityId
      };
    },
    pop(count, options) {
      var _a;
      let _count = 1;
      let _options = {};
      if (typeof count === "object") {
        _options = __spreadValues({}, count);
      }
      if (typeof count === "number") {
        _count = count;
      }
      if (options) {
        _options = __spreadValues({}, options);
      }
      for (let i = 0; i < _count; i += 1) {
        (_a = getCoreActions()) == null ? void 0 : _a.pop({
          skipExitActiveState: i === 0 ? parseActionOptions(_options).skipActiveState : true
        });
      }
    }
  };
}
