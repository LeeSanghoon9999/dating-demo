import type { ActivityBaseParams, ActivityDefinition, Config, RegisteredActivityName } from "@stackflow/config";
import type { ActivityComponentType } from "../__internal__/ActivityComponentType";
import type { StackflowReactPlugin } from "../stable";
import type { Actions } from "./Actions";
import type { StackComponentType } from "./StackComponentType";
import type { StepActions } from "./StepActions";
export type StackflowPluginsEntry = StackflowReactPlugin<never> | StackflowPluginsEntry[];
export type StackflowInput<T extends ActivityDefinition<RegisteredActivityName>, R extends {
    [activityName in RegisteredActivityName]: ActivityComponentType<any>;
}> = {
    config: Config<T>;
    components: R;
    plugins?: Array<StackflowPluginsEntry>;
};
export type StackflowOutput = {
    Stack: StackComponentType;
    actions: Actions;
    stepActions: StepActions<ActivityBaseParams>;
};
export declare function stackflow<T extends ActivityDefinition<RegisteredActivityName>, R extends {
    [activityName in RegisteredActivityName]: ActivityComponentType<any>;
}>(input: StackflowInput<T, R>): StackflowOutput;
//# sourceMappingURL=stackflow.d.ts.map