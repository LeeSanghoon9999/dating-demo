"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var useActions_exports = {};
__export(useActions_exports, {
  useActions: () => useActions
});
module.exports = __toCommonJS(useActions_exports);
var import_react = require("react");
var import_activity = require("../__internal__/activity");
var import_core = require("../__internal__/core");
var import_shims = require("../__internal__/shims");
function parseActionOptions(options) {
  if (!options) {
    return { skipActiveState: false };
  }
  const isNullableAnimateOption = options.animate == null;
  if (isNullableAnimateOption) {
    return { skipActiveState: false };
  }
  return { skipActiveState: !options.animate };
}
function useActions() {
  const coreActions = (0, import_core.useCoreActions)();
  const [pending] = (0, import_shims.useTransition)();
  return (0, import_react.useMemo)(
    () => ({
      pending,
      push(activityName, activityParams, options) {
        const activityId = (0, import_activity.makeActivityId)();
        coreActions == null ? void 0 : coreActions.push({
          activityId,
          activityName,
          activityParams,
          skipEnterActiveState: parseActionOptions(options).skipActiveState
        });
        return {
          activityId
        };
      },
      replace(activityName, activityParams, options) {
        var _a;
        const activityId = (0, import_activity.makeActivityId)();
        coreActions == null ? void 0 : coreActions.replace({
          activityId: (_a = options == null ? void 0 : options.activityId) != null ? _a : (0, import_activity.makeActivityId)(),
          activityName,
          activityParams,
          skipEnterActiveState: parseActionOptions(options).skipActiveState
        });
        return {
          activityId
        };
      },
      pop(count, options) {
        let _count = 1;
        let _options = {};
        if (typeof count === "object") {
          _options = __spreadValues({}, count);
        }
        if (typeof count === "number") {
          _count = count;
        }
        if (options) {
          _options = __spreadValues({}, options);
        }
        for (let i = 0; i < _count; i += 1) {
          coreActions == null ? void 0 : coreActions.pop({
            skipExitActiveState: i === 0 ? parseActionOptions(_options).skipActiveState : true
          });
        }
      }
    }),
    [coreActions == null ? void 0 : coreActions.push, coreActions == null ? void 0 : coreActions.replace, coreActions == null ? void 0 : coreActions.pop, pending]
  );
}
