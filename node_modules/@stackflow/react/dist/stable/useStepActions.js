"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var useStepActions_exports = {};
__export(useStepActions_exports, {
  useStepActions: () => useStepActions
});
module.exports = __toCommonJS(useStepActions_exports);
var import_react = require("react");
var import_activity = require("../__internal__/activity");
var import_core = require("../__internal__/core");
var import_shims = require("../__internal__/shims");
const useStepActions = () => {
  const coreActions = (0, import_core.useCoreActions)();
  const [pending] = (0, import_shims.useTransition)();
  return (0, import_react.useMemo)(
    () => ({
      pending,
      stepPush(params, options) {
        const activities = coreActions == null ? void 0 : coreActions.getStack().activities;
        const findTargetActivity = (options == null ? void 0 : options.targetActivityId) ? (0, import_activity.findActivityById)(options.targetActivityId) : import_activity.findLatestActiveActivity;
        const targetActivity = activities && findTargetActivity(activities);
        if (!targetActivity)
          throw new Error("The target activity is not found.");
        const stepParams = typeof params === "function" ? params(targetActivity.params) : params;
        const stepId = (0, import_activity.makeStepId)();
        coreActions == null ? void 0 : coreActions.stepPush({
          stepId,
          stepParams,
          targetActivityId: options == null ? void 0 : options.targetActivityId
        });
      },
      stepReplace(params, options) {
        const activities = coreActions == null ? void 0 : coreActions.getStack().activities;
        const findTargetActivity = (options == null ? void 0 : options.targetActivityId) ? (0, import_activity.findActivityById)(options.targetActivityId) : import_activity.findLatestActiveActivity;
        const targetActivity = activities && findTargetActivity(activities);
        if (!targetActivity)
          throw new Error("The target activity is not found.");
        const stepParams = typeof params === "function" ? params(targetActivity.params) : params;
        const stepId = (0, import_activity.makeStepId)();
        coreActions == null ? void 0 : coreActions.stepReplace({
          stepId,
          stepParams,
          targetActivityId: options == null ? void 0 : options.targetActivityId
        });
      },
      stepPop(options) {
        coreActions == null ? void 0 : coreActions.stepPop({
          targetActivityId: options == null ? void 0 : options.targetActivityId
        });
      }
    }),
    [
      coreActions == null ? void 0 : coreActions.stepPush,
      coreActions == null ? void 0 : coreActions.stepReplace,
      coreActions == null ? void 0 : coreActions.stepPop,
      coreActions == null ? void 0 : coreActions.getStack,
      pending
    ]
  );
};
